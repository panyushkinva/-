\documentclass{beamer}
\usepackage[T2A]{fontenc}
\usepackage{tikz}
\documentclass[a4paper,11pt]{article}
\usepackage[english,russian]{babel}
\usepackage[utf8]{inputenc}
% Стиль презентации
\usetheme{Warsaw}
\begin{document}
\title{Построение ядра Linux}  
\author{П\'{а}нюшкин Вячеслав Александрович}
\institute{Санкт-Петербургский государственный электротехническмй университет}
\date{Санкт-Петербург, 2018} 
% Создание заглавной страницы
\frame{\titlepage}
\newpage

\begin{frame}{Содержание}
• Получение исходников ядра\\
• Распаковка исходников ядра\\
• Автоматическая настройка сборки ядра Linux\\
• Ручная настройка ядра Linux\\
• Сборка ядра Linux\\
• Установка нового ядра\\
• Выводы
\end{frame}

\newpage
\begin{frame}{Получение исходников ядра}
Самое первое что нужно сделать - это скачать исходники ядра. Перед тем как скачивать исходники нам нужно определиться с версией ядра которую будем собирать. Есть две основных версии релизов - стабильные (stable) и кандидаты в релизы (rc), есть, конечно, еще стабильные с длительным периодом поддержки (longterm) но важно сейчас разобраться с первыми двумя. Стабильные это, как правило, не самые новые, но зато уже хорошо протестированные ядра с минимальным количеством багов. Тестовые - наоборот, самые новые, но могут содержать различные ошибки.
\end{frame}
\newpage
\begin{frame}{Получение исходников ядра}
Получить исходники ядра Linux можно также с помощью утилиты git. Сначала создадим папку для исходников:
\\
\[
\textbf{ mkdir kernel\underline{\hspace{0.2cm}}sources}
\]
\\
Для загрузки самой последней версии наберите:
\\
\[
\textbf{  git clone https://github.com/torvalds/linux}
\]
\end{frame}

\newpage

\begin{frame}{Распаковка исходников ядра}
Теперь у нас есть сохраненные исходники. Переходим в папку с исходниками:
\[
\textbf{mkdir linux\underline{\hspace{0.2cm}}sources}
\]

\[
\textbf{cp ~/Downloads/linux* /linux\underline{\hspace{0.2cm}}sources}
\]
\\
Распаковываем архив с помощью утилиты tar:
\[
\textbf{tar xf linux*}
\]
\\
И переходим в папку с распакованным ядром:
\[
\textbf{cd linux-4.4-rc7/}
\]
\end{frame}

\newpage

\begin{frame}{Автоматическая настройка сборки ядра Linux}
Перед тем как начнется сборка ядра linux, нам придется его настроить. Cначала рассмотрим автоматический вариант настройки сборки ядра. В вашей системе уже есть собранное, настроенное производителем дистрибутива, и полностью рабочее ядро. Если вы не хотите разбираться с тонкостями конфигурации ядра, можно просто извлечь уже готовые настройки старого ядра и сгенерировать на их основе настройки для нового. Нам придется лишь указать значения для новых параметров. Учитывая, что в последних версиях не было и не намечается серьезных изменений можно отвечать на все эти параметры как предлагает скрипт настройки.
\end{frame}

\newpage
\begin{frame}{Автоматическая настройка сборки ядра Linux}
Параметры используемого ядра хранятся в архиве по адресу /proc/config.gz. Распакуем конфиг и поместим его в нашу папку утилитой zcat:
\[
\textbf{zcat /proc/config.gz > .config}
\]
А дальше запускаем скрипт адаптации настроек:
\[
\textbf{make oldconfig}
\]
В процессе его работы нужно будет ответить на несколько вопросов. Это новые параметры, которые изменились или были добавлены в новое ядро и поддержка нового оборудования, в большинстве случаев можно выбирать вариант по умолчанию.
\end{frame}

\newpage
\begin{frame}{Ручная настройка ядра Linux}
Ручная настройка - сложный и трудоемкий процесс, но зато она позволяет понять как работает ваша система, какие функции используются и создать ядро с минимально нужным набором функций под свои потребности. Мы рассмотрим только главные шаги, которые нужно выполнить чтобы ядро собралось и заработало.
\\Для запуска меню настроек ядра linux наберите:
\[
\textbf{make oldconfig}
\]
\end{frame}

\newpage
\begin{frame}{Ручная настройка ядра Linux}
Откроется утилита с интерфейсом ncurses:
\vspace{\baselineskip}
  \begin{figure}[h]
\center{\includegraphics[scale=0.3]{1.png}}
\end{figure}
\\
Как видите, некоторые обязательные опции уже включены, чтобы облегчить вам процесс настройки. Начнем с самых основных настроек. Чтобы включить параметр нажмите y, чтобы включить модулем - m, для перемещения используйте клавиши стрелок и Enter, возвратиться на уровень вверх можно кнопкой Exit Откройте пункт General Setup.
\end{frame}

\newpage
\begin{frame}{Ручная настройка ядра Linux}
Здесь устанавливаем такие параметры:\\
Local Version - локальная версия ядра, будет увеличиваться при каждой сборке на единицу, чтобы новые ядра при установке не заменяли собой старые, устанавливаем значение 1.
\vspace{\baselineskip}
  \begin{figure}[h]
\center{\includegraphics[scale=0.3]{2.png}}
\end{figure}
Automatically append version information to the version string - добавлять версию в название файла ядра.
\\Kernel Compression Mode - режим сжатия образа ядра, самый эффективный lzma.
\end{frame}
\newpage
\begin{frame}{Ручная настройка ядра Linux}
\\Default Hostname - имя компьютера, отображаемое в приглашении ввода
\\POSIX Message Queues - поддержка очередей POSTIX
\\Support for paging of anonymous memory  - включаем поддержку swap
\\Control Group support - поддержка механизма распределения ресурсов между группами процессов
\\Kernel .config support и Enable access to .config through /proc/config.gz- включаем возможность извлечь конфигурацию ядра через /proc/config.gz
\end{frame}
\newpage
\begin{frame}{Ручная настройка ядра Linux}
Возвращаемся на уровень вверх и включаем Enable loadable module support, эта функция разрешает загрузку внешних модулей, дальше открываем его меню и включаем:
\begin{figure}[h]
\center{\includegraphics[scale=0.22]{3.png}}
\end{figure}
\\Module unloading - поддержка отключения модулей

\\Forced module unloading - принудительное отключение модулей

\\Опять возвращаемся назад и открываем Processor type and features:

\\Processor family (Opteron/Athlon64/Hammer/K8) - выбираем свой тип процессора.

\\Опять возвращаемся и переходим в раздел File systems, тут установите все нужные галочки.
\end{frame}
\newpage
\begin{frame}{Ручная настройка ядра Linux}
\begin{figure}[h]
\center{\includegraphics[scale=0.22]{4.png}}
\end{figure}
Обязательно включите The Extended 3 (ext3) filesystem и The Extended 4 (ext4) filesystem - для поддержки стандартных ext3 и ext4 файловых систем

\\Возвращаемся и идем в Kernel hacking.

\\Здесь включаем Magic SysRq key - поддержка магических функций SysRq, вещь не первой необходимости, но временами полезная.

\\Остался еще один пункт, самый сложный, потому что вам его придется пройти самому.  Device Drivers - нужно пройтись по разделам и повключать драйвера для своего оборудования.
\end{frame}
\newpage
\begin{frame}{Ручная настройка ядра Linux}
Посмотреть какое оборудование подключено к вашей системе можно командой:
\[
\textbf{lspci}
\]
\\После выполнения всех действий ядро готово к сборке.
\\Чтобы сохранить настройки переместите указатель с помощью стрелок вправо-влево, з позиции Select в позицию Save и нажмите Enter, потом еще раз подтвердите сохранение:
\end{frame}
\newpage
\begin{frame}{Ручная настройка ядра Linux}
\begin{figure}[h]
\center{\includegraphics[scale=0.4]{5.png}}
\end{figure}
\end{frame}

\newpage
\begin{frame}{Сборка ядра Linux}
После завершения всех приготовлений может быть выполнена сборка ядра linux. Для начала процесса сборки выполните:
\[
\textbf{make & & make modules}
\]
\\Процесс сборки длинный и займет около получаса.
\end{frame}
\newpage
\begin{frame}{Установка нового ядра}
Когда ядро и модули будут собраны новое ядро можно устанавливать. Можно вручную скопировать файл ядра в папку загрузчика:
\[
\textbf{cp arch/x86\underline{\hspace{0.2cm}}64/boot/bzImage /boot/vmlinuz}
\]
А можно просто выполнить установочный скрипт, сразу установив заодно и модули:
\[
\textbf{sudo make install && sudo make modules\underline{\hspace{0.2cm}}install}
\]
После установки не забудьте обновить конфигурацию загрузчика Grub:
\[
\textbf{ grub-mkconfig -o /boot/grub/grub.cfg}
\]
И перезагружаем компьютер чтобы увидеть новое ядро в работе.
\end{frame}

\newpage
\begin{frame}{Выводы}
Мы подробно рассмотрели как собрать ядро Linux из исходников. Это будет полезно всем желающим лучшие понять свою систему, и тем, кто хочет получить самую новую версию ядра в своей системе.
\end{frame}
\end{document}
